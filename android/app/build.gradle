def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin:  'kotlin-kapt'
apply plugin:  'kotlin-kapt'
apply plugin:  'kotlin-android-extensions'

android {
    compileSdkVersion 31

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.wallet_connect_flutter"
        minSdkVersion 23
        targetSdkVersion 31
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }

    
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation("com.github.WalletConnect:WalletConnectKotlinV2:1.0.0-beta03")

//    "implementation"("androidx.lifecycle:lifecycle-livedata-ktx:2.4.1")
//    "implementation"("androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1")
//    "implementation"("androidx.lifecycle:lifecycle-runtime-ktx:2.5.0-alpha03")
//    implementation 'androidx.core:core-ktx:1.7.0'
//    implementation 'androidx.fragment:fragment-ktx:1.4.1'
//    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
//    implementation 'androidx.fragment:fragment-ktx:1.4.1'
//    implementation 'androidx.activity:activity-ktx:1.4.0'
//    implementation("androidx.legacy:legacy-support-v4:1.0.0")


    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.0"

    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.3.0"

    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.3.0"

    implementation "androidx.core:core-ktx:1.3.2"

    "implementation"("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2")
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    "testImplementation"("org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.1")

    "implementation"("org.bouncycastle:bcprov-jdk15on:1.70")

    "implementation"("com.squareup.sqldelight:android-driver:1.5.2")
    "implementation"("com.squareup.sqldelight:coroutines-extensions-jvm:1.5.2")
    "implementation"("net.zetetic:android-database-sqlcipher:4.5.0@aar")

    implementation("com.google.android.material:material:1.4.0")
    implementation("androidx.constraintlayout:constraintlayout:2.1.1")

}
